# Nginx configuration for Django Converter Site
# This configuration serves static files, media files, and proxies requests to Django

upstream django_app {
    # Adjust these according to your server setup
    server 127.0.0.1:8000;
    # For multiple workers, add more servers:
    # server 127.0.0.1:8001;
    # server 127.0.0.1:8002;
}

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;  # Replace with your domain
    
    # Redirect HTTP to HTTPS (remove if you don't use SSL)
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;  # Replace with your domain
    
    # SSL Configuration (adjust paths to your certificates)
    ssl_certificate /path/to/your/cert.pem;
    ssl_certificate_key /path/to/your/private.key;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # File upload size limits
    client_max_body_size 500M;  # Must match Django's MAX_UPLOAD_SIZE
    client_body_timeout 120s;
    client_header_timeout 120s;
    
    # Root directory and index
    root /var/www/your-app;  # Adjust to your project path
    index index.html index.htm;
    
    # Logging
    access_log /var/log/nginx/django_app_access.log;
    error_log /var/log/nginx/django_app_error.log;
    
    # Serve static files directly
    location /static/ {
        alias /var/www/your-app/staticfiles/;  # Adjust to your STATIC_ROOT
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # GZIP compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    }
    
    # Serve media files with proper security
    location /media/ {
        alias /var/www/your-app/media/;  # Adjust to your MEDIA_ROOT
        
        # Security: Prevent execution of uploaded files
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
            return 403;
        }
        
        # Cache uploaded media files
        expires 7d;
        add_header Cache-Control "public";
        
        # Optional: Serve some media files only to authenticated users
        # location /media/private/ {
        #     internal;  # Only allow internal redirects from Django
        # }
    }
    
    # Health check endpoint
    location /health/ {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't log health checks
        access_log off;
    }
    
    # Main Django application
    location / {
        # First attempt to serve request as file, then as directory,
        # then pass to Django
        try_files $uri $uri/ @django;
    }
    
    # Django proxy configuration
    location @django {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for large file processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings for large responses
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        proxy_busy_buffers_size 16k;
        
        # Support for WebSocket connections (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Block access to sensitive files
    location ~ /\.(ht|git|svn|env) {
        deny all;
    }
    
    # Block access to Django admin media and other sensitive paths
    location ~ ^/(admin/media|media/admin|static/admin)/ {
        # Only allow admin access from specific IPs (optional)
        # allow 192.168.1.0/24;
        # deny all;
        proxy_pass http://django_app;
    }
    
    # Rate limiting for API endpoints
    location /app/api/ {
        # Create rate limit zones in http block:
        # limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        # limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Custom error pages
    error_page 404 /static/errors/404.html;
    error_page 500 502 503 504 /static/errors/50x.html;
    
    # Favicon
    location = /favicon.ico {
        alias /var/www/your-app/static/favicon.ico;
        log_not_found off;
        access_log off;
    }
    
    # robots.txt
    location = /robots.txt {
        alias /var/www/your-app/static/robots.txt;
        log_not_found off;
        access_log off;
    }
}

# Optional: HTTP block rate limiting configuration
# Add this to your main nginx.conf in the http block:
# http {
#     # Rate limiting zones
#     limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
#     limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
#     limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/m;
#     
#     # Connection limiting
#     limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
# }
