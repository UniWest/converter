"""
Django settings for converter_site project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-pil_my+-p)h2j$x_d4k2bas!1af0#hyucn12rso=#ka$iiv$b(')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['*']  # Разрешить все хосты для разработки

# ===================
# CORS AND CSRF CONFIGURATION
# ===================

# CORS settings for external origins
CORS_ALLOWED_ORIGINS = [
    "https://user740764150-wdjyqhj4.tunnel.vk-apps.com",
]

# Alternative: Allow all subdomains with regex (uncomment if needed)
# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^https://.*\.tunnel\.vk-apps\.com$",
# ]

# CSRF trusted origins
CSRF_TRUSTED_ORIGINS = [
    "https://user740764150-wdjyqhj4.tunnel.vk-apps.com",
]

# CORS headers for websockets (if needed)
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Allow credentials (cookies, authentication)
CORS_ALLOW_CREDENTIALS = True

# Allow common HTTP methods
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # django-cors-headers
    # 'django_celery_beat',  # Отключено - пакет не установлен
    'converter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # WhiteNoise for static files
    'corsheaders.middleware.CorsMiddleware',  # CORS middleware after SecurityMiddleware
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'converter_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'converter_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# WhiteNoise configuration for serving static files
if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# FFmpeg configuration
FFMPEG_BINARY = config('FFMPEG_BINARY', default=r'C:\ffmpeg\ffmpeg-7.1.1-essentials_build\bin\ffmpeg.exe')

# Дополнительные настройки для видео обработки
MAX_UPLOAD_SIZE = config('MEDIA_MAX_SIZE', default=500, cast=int) * 1024 * 1024  # МБ в байты
VIDEO_PROCESSING_TIMEOUT = 300  # 5 минут
AUDIO_MAX_DURATION = config('AUDIO_MAX_DURATION', default=3600, cast=int)  # секунды

# ===================
# STT НАСТРОЙКИ
# ===================

# Движок распознавания речи
STT_ENGINE = config('STT_ENGINE', default='whisper')
# Возможные значения: 'whisper', 'google'

# Настройки Whisper (faster-whisper)
WHISPER_MODEL = config('WHISPER_MODEL', default='base')
WHISPER_DEVICE = config('WHISPER_DEVICE', default='auto')
WHISPER_COMPUTE_TYPE = config('WHISPER_COMPUTE_TYPE', default='int8')

# Языки для автоопределения в Whisper
WHISPER_AUTO_LANGUAGES = ['ru', 'en', 'es', 'fr', 'de', 'it', 'pt', 'zh', 'ja', 'ko']

# Настройки предобработки аудио
AUDIO_PREPROCESSING = {
    'normalize': True,
    'noise_reduction': True,
    'high_pass_filter': 300,  # Гц
    'low_pass_filter': 3400,  # Гц
    'silence_threshold': -40,  # dBFS
    'min_silence_len': 1000,  # мс
    'keep_silence': 500,  # мс
}

# Celery Configuration disabled for development

# ========================
# КОНФИГУРАЦИЯ CELERY (ОТКЛЮЧЕНО ДЛЯ РАЗРАБОТКИ)
# ========================

# Выполняем задачи синхронно без Redis/Celery
CELERY_TASK_ALWAYS_EAGER = True
CELERY_TASK_EAGER_PROPAGATES = True

# Отключаем брокер и backend
CELERY_BROKER_URL = None
CELERY_RESULT_BACKEND = None

# Продакшен настройки (закомментированы)
# CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379/0')
# CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='redis://localhost:6379/0')

# Дополнительные настройки Celery (отключены в dev режиме)
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TIMEZONE = TIME_ZONE
# CELERY_ENABLE_UTC = True
# CELERY_WORKER_PREFETCH_MULTIPLIER = 1
# CELERY_TASK_ACKS_LATE = True
# CELERY_WORKER_MAX_TASKS_PER_CHILD = 50
# CELERY_TASK_SOFT_TIME_LIMIT = 3600  
# CELERY_TASK_TIME_LIMIT = 7200       
# CELERY_WORKER_SEND_TASK_EVENTS = True
# CELERY_TASK_SEND_SENT_EVENT = True
# CELERY_RESULT_EXPIRES = 3600  
# CELERY_TASK_TRACK_STARTED = True
# CELERY_TASK_IGNORE_RESULT = False
# CELERY_TASK_ROUTES = {
#     'converter_site.tasks.convert_audio_to_text': {'queue': 'audio_processing'},
#     'converter_site.tasks.create_gif_from_images': {'queue': 'image_processing'},
#     'converter_site.tasks.cleanup_old_files': {'queue': 'maintenance'},
# }
# CELERY_TASK_RETRY_DELAY = 60
# CELERY_TASK_MAX_RETRIES = 3
# CELERY_WORKER_HIJACK_ROOT_LOGGER = False
# CELERY_WORKER_LOG_FORMAT = '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s'
# CELERY_WORKER_TASK_LOG_FORMAT = '[%(asctime)s: %(levelname)s/%(processName)s][%(task_name)s(%(task_id)s)] %(message)s'

# Все остальные настройки Celery отключены в dev режиме
# Периодические задачи, события, аннотации - все закомментировано

#     CELERY_BEAT_SCHEDULE = {}
#     CELERY_BEAT_SCHEDULER = None
# 
# CELERY_TASK_REJECT_ON_WORKER_LOST = True
# CELERY_TASK_STORE_EAGER_RESULT = True
# CELERY_SEND_TASK_SENT_EVENT = True
# CELERY_SEND_EVENTS = True
# 
# CELERY_TASK_ANNOTATIONS = {
#     'converter_site.tasks.convert_audio_to_text': {
#         'rate_limit': '10/m',
#         'time_limit': 3600,
#         'soft_time_limit': 3300,
#     },
#     'converter_site.tasks.create_gif_from_images': {
#         'rate_limit': '20/m', 
#         'time_limit': 1800,
#         'soft_time_limit': 1500,
#     },
# }
