#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: source .venv/bin/activate"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install -q -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis..."
if ! redis-cli ping > /dev/null 2>&1; then
    echo "‚ùå Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Redis —Å–µ—Ä–≤–µ—Ä."
    echo "Ubuntu/Debian: sudo systemctl start redis"
    echo "macOS: brew services start redis"
    echo "Docker: docker run -d -p 6379:6379 redis:alpine"
    exit 1
fi
echo "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
python manage.py migrate

# –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
python manage.py collectstatic --noinput

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p media temp staticfiles

# –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg
echo "üé¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg..."
if command -v ffmpeg &> /dev/null; then
    echo "‚úÖ FFmpeg –Ω–∞–π–¥–µ–Ω: $(ffmpeg -version | head -1)"
else
    echo "‚ö†Ô∏è  FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏."
fi

# –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ
echo "üèÉ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# Django —Å–µ—Ä–≤–µ—Ä
python manage.py runserver 0.0.0.0:8000 &
DJANGO_PID=$!

# Celery Worker
celery -A converter_site worker --loglevel=info --concurrency=2 &
CELERY_WORKER_PID=$!

# Celery Beat
celery -A converter_site beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler &
CELERY_BEAT_PID=$!

# Flower (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if command -v flower &> /dev/null; then
    celery -A converter_site flower --port=5555 &
    FLOWER_PID=$!
    echo "üå∏ Flower –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:5555"
fi

echo ""
echo "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
echo "üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000"
echo "üå∏ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Celery: http://localhost:5555"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    kill $DJANGO_PID $CELERY_WORKER_PID $CELERY_BEAT_PID 2>/dev/null
    if [[ ! -z "$FLOWER_PID" ]]; then
        kill $FLOWER_PID 2>/dev/null
    fi
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

trap cleanup INT TERM

# –û–∂–∏–¥–∞–Ω–∏–µ
wait
