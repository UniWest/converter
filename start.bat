@echo off
chcp 65001 >nul

echo üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤...

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if "%VIRTUAL_ENV%"=="" (
    echo ‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!
    echo –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .venv\Scripts\activate
    pause
    exit /b 1
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...
pip install -q -r requirements.txt

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis...
redis-cli ping >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Redis —Å–µ—Ä–≤–µ—Ä.
    echo Windows: –ó–∞–ø—É—Å—Ç–∏—Ç–µ redis-server.exe –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ Docker
    echo Docker: docker run -d -p 6379:6379 redis:alpine
    pause
    exit /b 1
)
echo ‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç

REM –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...
python manage.py migrate

REM –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
echo üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...
python manage.py collectstatic --noinput

REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...
if not exist "media" mkdir media
if not exist "temp" mkdir temp
if not exist "staticfiles" mkdir staticfiles

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg
echo üé¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg...
ffmpeg -version >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è  FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
) else (
    echo ‚úÖ FFmpeg –Ω–∞–π–¥–µ–Ω
)

echo.
echo üéâ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...
echo üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000
echo üå∏ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Celery: http://localhost:5555
echo.
echo –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –≤—Å–µ –æ–∫–Ω–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C

REM –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
start "Django Server" cmd /k "python manage.py runserver 0.0.0.0:8000"

REM –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Django
timeout /t 3 /nobreak >nul

REM –ó–∞–ø—É—Å–∫ Celery Worker –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
start "Celery Worker" cmd /k "celery -A converter_site worker --loglevel=info --concurrency=2"

REM –ó–∞–ø—É—Å–∫ Celery Beat –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
start "Celery Beat" cmd /k "celery -A converter_site beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"

REM –ó–∞–ø—É—Å–∫ Flower –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
flower --version >nul 2>&1
if not errorlevel 1 (
    start "Flower Monitor" cmd /k "celery -A converter_site flower --port=5555"
)

echo –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö!
pause
