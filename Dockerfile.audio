# Dockerfile for enhanced audio processing
FROM python:3.11-slim

# Install system dependencies for audio processing
RUN apt-get update && apt-get install -y \
    ffmpeg \
    portaudio19-dev \
    python3-dev \
    build-essential \
    pkg-config \
    libffi-dev \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pre-download Whisper models to reduce startup time
RUN python -c "import whisper; whisper.load_model('base')"

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/media/temp /app/media/audio /var/log

# Set environment variables for production
ENV DJANGO_SETTINGS_MODULE=converter_site.settings
ENV WHISPER_CACHE_DIR=/app/.cache/whisper
ENV AUDIO_LOG_FILE=/var/log/audio_processing.log
ENV MAX_MEMORY_USAGE_MB=2048
ENV CONCURRENT_AUDIO_JOBS=2

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Expose port
EXPOSE 8000

# Run the application
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "1800", "converter_site.wsgi:application"]
